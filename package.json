{
  "name": "meterr",
  "version": "0.1.0-mvp",
  "private": true,
  "type": "module",
  "packageManager": "pnpm@10.14.0",
  "scripts": {
    "dev": "pnpm run dev:marketing & pnpm run dev:app",
    "dev:marketing": "pnpm --filter @meterr/marketing dev --turbo",
    "dev:app": "pnpm --filter @meterr/app dev --turbo",
    "dev:admin": "pnpm --filter @meterr/admin dev --turbo",
    "dev:ui": "pnpm --filter @meterr/ui dev",
    "build": "nx run-many --target=build --all --parallel=16",
    "build:fast": "nx run-many --target=build --all --parallel=16 --skip-nx-cache",
    "build:affected": "nx affected --target=build --parallel=16",
    "build:apps": "turbo build --filter='./apps/*' --concurrency=32",
    "build:marketing": "pnpm --filter @meterr/marketing build",
    "build:app": "pnpm --filter @meterr/app build",
    "build:admin": "pnpm --filter @meterr/admin build",
    "build:packages": "turbo build --filter='./packages/*' --concurrency=32",
    "build:ui": "pnpm --filter @meterr/ui build",
    "test": "jest --maxWorkers=32",
    "test:watch": "jest --watch --maxWorkers=32",
    "lint": "eslint . --parallel --cache --cache-location R:/node-cache/.eslintcache",
    "typecheck": "tsc --build --incremental",
    "typecheck:fast": "tsc -b --incremental --assumeChangesOnlyAffectDirectDependencies",
    "optimize:cache": "powershell -Command \"if (!(Test-Path R:)) { imdisk -a -s 16G -m R: -p '/fs:ntfs /q /y' }; mkdir -Force R:/next-cache,R:/turbo-cache,R:/node-cache\"",
    "deploy": "pnpm run deploy:marketing && pnpm run deploy:app",
    "deploy:marketing": "cd apps/marketing && vercel --prod",
    "deploy:app": "cd apps/app && vercel --prod",
    "deploy:admin": "cd apps/admin && vercel --prod",
    "setup": "powershell -ExecutionPolicy Bypass -File scripts/setup.ps1",
    "spawn-agent": "node scripts/agent-spawn.js",
    "research": "tsx apps/app/scripts/research-executor.ts",
    "analyze": "tsx apps/app/scripts/analyze-research.ts",
    "prototype": "tsx apps/app/scripts/prototype-builder.ts",
    "validate": "tsx apps/app/scripts/validate-prototypes.ts",
    "docs": "cd docs-portal && pnpm start",
    "docs:build": "cd docs-portal && pnpm build",
    "docs:serve": "cd docs-portal && pnpm serve",
    "docs:migrate": "tsx scripts/migrate-to-docusaurus.ts",
    "docs:fix": "tsx scripts/fix-mdx-syntax.ts",
    "mcp": "node scripts/mcp-inspect.js",
    "mcp:llm": "node scripts/mcp-inspect.js llm-research",
    "mcp:fs": "node scripts/mcp-inspect.js filesystem",
    "mcp:github": "node scripts/mcp-inspect.js github",
    "mcp:test": "mcp-inspector-cli --config mcp-config.json --server llm-research --cli",
    "overnight": "npm run research && npm run analyze && npm run prototype && npm run validate",
    "env:setup": "cp .env.example .env && echo 'Please add your API keys to .env'",
    "skeptic": "tsx apps/app/scripts/skeptical-validator.ts",
    "dialogue": "tsx apps/app/scripts/agent-dialogue.ts",
    "validate-claims": "npm run skeptic && npm run dialogue",
    "check:docs": "node scripts/check-docs-consistency.js",
    "check:docs-consistency": "node scripts/check-docs-consistency.js",
    "docs:validate": "pnpm check:docs-consistency",
    "prepare": "husky",
    "dev:gpu": "cross-env ENABLE_GPU=true pnpm dev",
    "dev:memory": "cross-env USE_MEMORY_DB=true pnpm dev",
    "dev:fast": "cross-env USE_MEMORY_DB=true ENABLE_GPU=true pnpm dev",
    "benchmark:tokens": "tsx scripts/benchmark-tokens.ts",
    "benchmark:db": "tsx scripts/benchmark-db.ts",
    "generate": "plop",
    "generate:api": "plop api",
    "generate:component": "plop component",
    "generate:model": "plop model",
    "generate:feature": "plop feature",
    "fix:dates": "node scripts/fix-dates.cjs",
    "check:dates": "node scripts/check-dates.cjs",
    "python:setup": "bash scripts/setup-python.sh",
    "analyze:tokens": "python scripts/python/token_analyzer.py",
    "test:models": "python scripts/python/model_tester.py",
    "dashboard": "streamlit run scripts/python/dashboard.py",
    "benchmark:gpu": "python scripts/python/token_analyzer.py --benchmark",
    "lint:biome": "biome check . --write",
    "lint:fast": "biome check .",
    "format": "biome format . --write",
    "clean:unused": "knip",
    "clean:deps": "knip --dependencies",
    "clean:exports": "knip --exports",
    "check:types": "type-coverage --detail",
    "check:size": "size-limit",
    "optimize": "pnpm run lint:biome && pnpm run clean:unused && pnpm run check:types",
    "docs:check": "node tools/enforcement/scripts/check-documentation.js",
    "docs:validate": "node tools/enforcement/scripts/check-documentation.js",
    "docs:duplication": "node tools/docs/check-duplication.cjs",
    "docs:tokens": "node tools/docs/token-counter.cjs"
  },
  "devDependencies": {
    "@babel/parser": "^7.28.3",
    "@babel/traverse": "^7.28.3",
    "@biomejs/biome": "^2.2.0",
    "@nx/workspace": "^21.3.11",
    "@size-limit/preset-app": "^11.2.0",
    "@types/node": "^20.0.0",
    "dotenv": "^16.3.1",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "knip": "^5.62.0",
    "nx": "^21.3.11",
    "size-limit": "^11.2.0",
    "tsx": "^4.7.0",
    "turbo": "^2.5.6",
    "type-coverage": "^2.29.7",
    "typescript": "^5.0.0",
    "yaml": "^2.8.1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.17.0",
    "@faker-js/faker": "^8.3.1",
    "@google/generative-ai": "^0.2.0",
    "axios": "^1.6.5",
    "better-sqlite3": "^9.2.2",
    "bignumber.js": "^9.1.2",
    "cross-env": "^7.0.3",
    "openai": "^4.24.1",
    "plop": "^4.0.1"
  }
}
