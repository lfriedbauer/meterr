name: Documentation Build & Deploy

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'docs-portal/**'
      - 'CHANGELOG.md'
      - '.github/workflows/docs-build.yml'
  pull_request:
    paths:
      - 'docs-portal/**'
      - 'CHANGELOG.md'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build documentation
        run: |
          cd docs-portal
          pnpm build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docs-build
          path: docs-portal/build
          retention-days: 7
  
  deploy-preview:
    name: Deploy Preview to Vercel
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs-build
          path: docs-portal/build
      
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./docs-portal
          alias-domains: |
            pr-${{ github.event.pull_request.number }}-docs.meterr.ai
  
  deploy-production:
    name: Deploy to Production
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs-build
          path: docs-portal/build
      
      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./docs-portal
          vercel-args: '--prod'
          alias-domains: |
            docs.meterr.ai
      
      - name: Notify deployment
        if: success()
        run: |
          echo "âœ… Documentation deployed to production"
          echo "URL: https://docs.meterr.ai"
      
      - name: Invalidate CDN cache
        if: success()
        run: |
          echo "Invalidating CDN cache for docs.meterr.ai"
          # Add CDN invalidation command here if needed